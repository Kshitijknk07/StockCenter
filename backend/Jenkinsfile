pipeline {
    agent any
    
    tools {
        nodejs 'NodeJS 24'
    }
    
    stages {
        stage('Checkout') { 
            steps {
                checkout scm
            }
        }
        
        stage('Backend - Install Dependencies') {
            steps {
                dir('backend') {
                    sh 'npm install'
                }
            }
        }
        
        stage('Backend - Lint') {
            steps {
                dir('backend') {
                    sh 'npm run lint || true'
                }
            }
        }
        
        stage('Backend - Test') {
            steps {
                dir('backend') {
                    sh 'npm test || true'
                }
            }
        }
        
        stage('Backend - Prepare Environment') {
            steps {
                dir('backend') {
                    sh '''
                    echo "Creating .env.docker file"
                    echo "NODE_ENV=production" > .env.docker
                    echo "PORT=3000" >> .env.docker
                    
                    echo "Creating Docker network"
                    docker network create stockpilot-network || true
                    '''
                }
            }
        }
        
        stage('Backend - Build Docker Image') {
            steps {
                dir('backend') {
                    sh 'docker build -t stockpilot-backend:${BUILD_NUMBER} .'
                }
            }
        }
        
        stage('Deploy Backend') {
            steps {
                dir('backend') {
                    sh '''
                    docker stop stockpilot-backend || true
                    docker rm stockpilot-backend || true
                    docker run -d --name stockpilot-backend \
                      -p 3000:3000 \
                      --env-file .env.docker \
                      --network stockpilot-network \
                      stockpilot-backend:${BUILD_NUMBER}
                    '''
                }
            }
        }
    }
    
    post {
        always {
            cleanWs()
        }
    }
}